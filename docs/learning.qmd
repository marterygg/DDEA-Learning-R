---
title: "Reproducible document"
author: "Marte Opseth Rygg"
format: html
---

## Basics of R

```{r}
1 + 1
```

## Setup code chunk 

```{r setup}
#| message: false
#| warning: false
library(tidyverse)
post_meal_data <- read.csv2(here::here("data/post-meal-insulin.csv"))
```

## Showing the data 

```{r}
post_meal_data
```


```{r}
glimpse(post_meal_data)
```


## About me 

- Name: Marte Opseth Rygg
- Affiliation: Steno Dibaetes Center Copenhagen 

I am **Norwegian** and love to walk in the *mountains*.

## Simple code 

```{r}
3 * 3
```

## Testing for Git 

Random words. 

## Make a figure 

Figurer navngives automatisk, efter hvor de fremgår i dokumentet. Så den første figur bliver automatisk navngivet "Figure 1". 

```{r}
ggplot(post_meal_data, aes(x = BMI)) + # data, what variables where
  geom_histogram() # what plot I want
```


```{r}
#| fig-cap: "Distribution of BMI"
#| label: fig-bmi-histo
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()
```


```{r}
#| fig-cap: "Excercise: discrete plots."
#| label: fig-group-bar
ggplot(post_meal_data, aes(x = Group)) +
  geom_bar()
```

@fig-group-bar

```{r}
post_meal_data %>%
  ggplot(aes(x = Group, fill = glykemi)) +
  geom_bar()
```
```{r}
post_meal_data %>%
  ggplot(aes(x = Group, fill = as.character(glykemi))) + # Have to convert glykemi fra numeric til vector
  geom_bar()
```

Vi vil gerne have glykemi fordelingen ved siden af hindanden indenfor hver gruppe. 

```{r}
post_meal_data %>%
  ggplot(aes(x = Group, fill = as.character(glykemi))) +
  geom_bar(position = position_dodge())
```

## Få to plots ved siden af hindanden 

```{r}
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()
```

```{r}
ggplot(post_meal_data, aes(x = glykemi)) +
  geom_bar()
```

```{r side-by-side-figs}
#| label: fig-bmi-glycemia
#| fig-cap: "BMI and glycemia, side by side."
#| fig-subcap:
#|   - "Distribution of BMI."
#|   - "Number of those with glycemia."
#| layout-ncol: 2
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()

ggplot(post_meal_data, aes(x = glykemi)) +
  geom_bar()
```

## Plotting two continous variables 

```{r BMI against AUC for plasma glucose}
#| fig-cap: "Scatterplot"
#| label: fig-bmi-auc-pg
ggplot(post_meal_data, aes(x = BMI, y = auc_pg)) +
  geom_point() + # What type of graph do I want
  geom_smooth()
```

```{r}
small_post_meal_data <- select(post_meal_data, id, Age, BMI, Group, auc_pg, auc_ins, glykemi)
```


```{r}
tidier_post_meal_data <- small_post_meal_data |>
  rename(
    auc_glucose = auc_pg,
    auc_insulin = auc_ins
  ) |>
  filter(glykemi == 0) |>
  select(-glykemi)
tidier_post_meal_data
```
```{r}
tidier_post_meal_data |>
  mutate(
    insulin_glucose_ratio = auc_insulin / auc_glucose,
    Group = if_else(Group == " CTR", "Control", "First-degree relative")
  )
```

## Practice with filter and mutate

```{r}
post_meal_data |>
  filter(BMI >= 20 & BMI <= 40 & Group == "FDR")
```

16 people

```{r}
post_meal_data |>
  mutate(
    percent_body_fat = (Fat.mass.DXA / Weight) * 100
  ) |>
  filter(percent_body_fat > 30)
```
